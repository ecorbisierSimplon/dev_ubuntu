# ALIAS GIT WITH TIME

source() {
    echo $(date "+%Y_%m_%d-%H:%M:%S")
    source ~/.bashrc
    source ~/.bash_aliases
}

hr() { date "+%Y_%m_%d-%H:%M:%S"; }

inst() {
    key="$1"
    date "+%Y_%m_%d-%H:%M:%S"
    if [ -n "$key" ]; then
        cd $key
    fi
    ./install.sh
}

play() {
    key="$1"
    date "+%Y_%m_%d-%H:%M:%S"
    if [ -n "$key" ]; then
        cd $key
    fi
    ./play.sh
}


Git() {
    key="$1"
    echo $(date "+%Y_%m_%d-%H:%M:%S")
    case "$key" in
    c | ac | ap | tt | echo | readme | ig | cached)
        git "$@" "$(date '+%Y_%m_%d-%H:%M:%S')"
        shift
        ;;
    *)
        git "$@"
        shift
        ;;
    esac

}

# ALIAS NPM
Npm() {
    key="$1"
    case $key in
    d)
        npm run dev -- --open
        shift
        ;;
    b)
        npm run build
        shift
        ;;
    t)
        npm run test "${@:2}"
        shift
        ;;
    i)
        npm install
        shift
        ;;
    *)
        npm "$@"
        shift
        ;;
    esac
}

# ALIAS DOKER
docker-desktop() {
    /opt/docker-desktop/bin/docker-desktop
}

Dock() {
    key="$1"
    case $key in
    run)
        /opt/docker-desktop/bin/docker-desktop
        shift
        ;;
    up)
        docker compose up
        shift
        ;;
    up-d)
        docker compose up -d
        shift
        ;;
    up-f)
        docker-compose up --force-recreate -d
        shift
        ;;
    sp)
        docker system prune
        shift
        ;;
    c)
        docker compose "${@:2}"
        shift
        ;;
    c-)
        docker-compose "${@:2}"
        shift
        ;;
    *)
        gh "$@"
        shift
        ;;
    esac

}

# ALIAS GITHUB
Gh() {
    key="$1"
    case $key in
    c)
        gh issue create
        shift
        ;;
    *)
        gh "$@"
        shift
        ;;
    esac
}

# ALIAS PHP
Php() {
    key="$1"
    respons=${@:-"--version"}
    case $key in
    r)
        composer require "${@:2}"
        shift
        ;;
    m)
        php bin/console make:"${@:2}"
        shift
        ;;
    c)
        php bin/console make:controller "${@:2}"
        shift
        ;;
    e)
        php bin/console make:entity "${@:2}"
        shift
        ;;
    b)
        php bin/console "${@:2}"
        shift
        ;;
    d)
        php bin/console doctrine:"${@:2}"
        shift
        ;;
    df)
        php bin/console doctrine:fixtures:load
        shift
        ;;
    crud)
        php bin/console make:crud "${@:2}"
        shift
        ;;
    mm)
        php bin/console make:migration
        shift
        ;;
    dm)
        php bin/console doctrine:migration:migrate
        shift
        ;;
    mdm)
        php bin/console make:migration
        php bin/console doctrine:migration:migrate
        shift
        ;;
    cdb)
        php bin/console doctrine:database:create
        php bin/console make:migration
        php bin/console doctrine:migration:migrate
        shift
        ;;

    *)
        echo "La commande '$@' nest pas une commande 'PHP'"
        echo "Essayez avec 'php $@'"
        shift
        ;;
    esac
}

